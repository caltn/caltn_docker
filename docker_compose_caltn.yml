version: '3'
services:
  nginx:
    build: ./nginx/
    image: ${GLOBAL_PROJECT_NAME}/nginx:latest
    container_name: "${GLOBAL_PROJECT_NAME}_nginx"
    volumes:
      - ./www:/var/www/html:rw
      - ./nginx/${GLOBAL_NGINX_ENV}/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/${GLOBAL_NGINX_ENV}/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/logs:/var/log/nginx:rw
    ports:
      - "443:443"
      - "80:80"
    networks:
      - mynetwork
    depends_on:
      - php72
      - php56
      - nodejsapp
      - gitlab
  
  php72:
    build: 
      context: ./php/
      dockerfile: ./php72/Dockerfile
    image: ${GLOBAL_PROJECT_NAME}/php72:latest
    container_name: "${GLOBAL_PROJECT_NAME}_php72"
    volumes:
      - ./www:/var/www/html:rw
      - ./php/php72/config/php.ini:/usr/local/etc/php/php.ini:ro
      - ./php/php72/config/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:rw
      - ./php/php72/log:/var/log/php-fpm:rw
    expose:
      - "9000"
    networks:
      - mynetwork
    depends_on:
      - mysql
      - redis
  
  php56:
    build: 
      context: ./php/
      dockerfile: ./php56/Dockerfile
    image: ${GLOBAL_PROJECT_NAME}/php56:latest
    container_name: "${GLOBAL_PROJECT_NAME}_php56"
    volumes:
      - ./www:/var/www/html:rw
      - ./php/php56/config/php.ini:/usr/local/etc/php/php.ini:ro
      - ./php/php56/config/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:rw
      - ./php/php56/log:/var/log/php-fpm:rw
    expose:
      - "9000"
    networks:
      - mynetwork
    depends_on:
      - mysql
      - redis
  
  mysql:
    build: ./mysql/
    image: ${GLOBAL_PROJECT_NAME}/mysql:latest
    container_name: "${GLOBAL_PROJECT_NAME}_mysql"
    volumes:
      - ./mysql/config/my.cnf:/etc/mysql/my.cnf:ro
      - ./mysql/data:/var/lib/mysql:rw
      - ./mysql/log:/var/log/mysql:rw
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
    ports:
      - "3306:3306"
    networks:
      - mynetwork
  
  redis:
    build: ./redis/
    image: ${GLOBAL_PROJECT_NAME}/redis:latest
    container_name: "${GLOBAL_PROJECT_NAME}_redis"
    ports:
      - "6379:6379"
    networks:
      - mynetwork

  nodejsapp:
    build: ./app_basic/nodejsapp/
    image: ${GLOBAL_PROJECT_NAME}/nodejsapp:latest
    container_name: "${GLOBAL_PROJECT_NAME}_nodejsapp"
    volumes:
      - ./www/nodejsapp:/home/nodejsapp:rw
    expose:
      - "3000"
    networks:
      - mynetwork
  
  gitlab:
    build: ./gitlab/
    image: '${GLOBAL_PROJECT_NAME}/gitlab:latest'
    container_name: "${GLOBAL_PROJECT_NAME}_gitlab"
    restart: always
    volumes:
      - './gitlab/config:/etc/gitlab'
      - './gitlab/logs:/var/log/gitlab'
      - './gitlab/data:/var/opt/gitlab'
    # hostname: 'gitlab.mydev.com'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab-local.mydev.com'
        gitlab_rails['gitlab_shell_ssh_port'] = 10022
        postgresql['enable'] = false
        gitlab_rails['db_adapter'] = 'postgresql'
        gitlab_rails['db_encoding'] = 'utf8'
        gitlab_rails['db_host'] = 'postgres'
        gitlab_rails['db_port'] = '5432'
        gitlab_rails['db_username'] = 'postgres'
        gitlab_rails['db_password'] = '123456'
        redis['enable'] = false
        gitlab_rails['redis_host'] = 'redis'
        gitlab_rails['redis_port'] = 6379
        gitlab_workhorse['auth_backend'] = "http://localhost:8080"
        unicorn['port'] = 8080
        gitlab_rails['webhook_timeout'] = 90 
        gitlab_rails['git_timeout']=90
        unicorn['socket'] = '/opt/gitlab/var/unicorn/gitlab.socket'
    expose:
      - '22'
      - '80'
      - '443'
    ports:
      - "10022:22"
    depends_on:
      - postgres
      - redis
    networks:
      - mynetwork

  postgres:
    image: ${GLOBAL_PROJECT_NAME}/postgres:latest
    build: ./postgres/
    container_name: "${GLOBAL_PROJECT_NAME}_postgres"
    restart: always
    volumes:
        - ./postgres/data:/var/lib/postgresql/data
    environment:
        - POSTGRES_PASSWORD=123456
    ports:
      - "5432:5432"
    networks:
      - mynetwork
      
networks:
    mynetwork:
      driver: bridge
version: '3'
services:
  nginx:
    build: ./nginx/
    ports:
      # - "443:443"
      - "80:80"  # site1
      - "81:81" # site2
      - "82:82" # nodejs
    networks:
      - mynetwork

    # volumes:
    #   - ./www/:/var/www/html/:rw
    #   - ./conf/nginx/conf.d:/etc/nginx/conf.d/:ro
    #   - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    #   - ./log/nginx/:/var/log/nginx/:rw
    volumes:
      - ./www/:/var/www/html/:rw
      - ./conf/nginx_dev/conf.d:/etc/nginx/conf.d/:ro
      - ./conf/nginx_dev/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./log/nginx_dev/:/var/log/nginx/:rw
    networks:
      - mynetwork
    depends_on:
      - php72
      - php56
      - nodejsapp
      - gitlab
  
  php72:
    build: 
      context: ./php/
      dockerfile: ./php72/Dockerfile
    expose:
      - "9000"
    volumes:
      - ./www/:/var/www/html/:rw
      - ./conf/php/php72/php.ini:/usr/local/etc/php/php.ini:ro
      - ./conf/php/php72/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:rw
      - ./log/php-fpm/php72/:/var/log/php-fpm/:rw
    networks:
      - mynetwork
    depends_on:
      - mysql
      - redis
  
  php56:
    build: 
      context: ./php/
      dockerfile: ./php56/Dockerfile
    expose:
      - "9000"
    volumes:
      - ./www/:/var/www/html/:rw
      - ./conf/php/php56/php.ini:/usr/local/etc/php/php.ini:ro
      - ./conf/php/php56/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:rw
      - ./log/php-fpm/php56/:/var/log/php-fpm/:rw
    networks:
      - mynetwork
    depends_on:
      - mysql
      - redis
  
  mysql:
    image: mysql:5.7.22
    ports:
      - "3306:3306"
    volumes:
      - ./conf/mysql/my.cnf:/etc/mysql/my.cnf:ro
      - ./mysql/:/var/lib/mysql/:rw
      - ./log/mysql/:/var/log/mysql/:rw
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
    networks:
      - mynetwork
  
  redis:
    image: redis:latest
    container_name: "dev_redis"
    ports:
      - "6379:6379"
    networks:
      - mynetwork

  nodejsapp:
    build: ./app_basic/nodejsapp/
    container_name: "nodejsappa"
    volumes:
      - ./www/nodejsapp:/home/nodejsapp:rw
    networks:
      - mynetwork
  
  gitlab:
    build: ./gitlab/
    # image: 'gitlab/gitlab-ce:latest'
    restart: always
    ports:
        - "10022:22"
    # hostname: 'gitlab.mydev.com'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.mydev.com'
        gitlab_rails['gitlab_shell_ssh_port'] = 10022
        postgresql['enable'] = false
        gitlab_rails['db_adapter'] = 'postgresql'
        gitlab_rails['db_encoding'] = 'utf8'
        gitlab_rails['db_host'] = 'postgres'
        gitlab_rails['db_port'] = '5432'
        gitlab_rails['db_username'] = 'postgres'
        gitlab_rails['db_password'] = '123456'
        redis['enable'] = false
        gitlab_rails['redis_host'] = 'redis'
        gitlab_rails['redis_port'] = 6379
        gitlab_workhorse['auth_backend'] = "http://localhost:8080"
        unicorn['port'] = 8080
        gitlab_rails['webhook_timeout'] = 90 
        gitlab_rails['git_timeout']=90
        unicorn['socket'] = '/opt/gitlab/var/unicorn/gitlab.socket'
    expose:
      - '22'
      - '80'
      - '443'
    volumes:
      - './gitlab/config:/etc/gitlab'
      - './gitlab/logs:/var/log/gitlab'
      - './gitlab/data:/var/opt/gitlab'
    depends_on:
      - postgres
      - redis
    networks:
      - mynetwork

  postgres:
    restart: always
    # image: local/postgres:test
    build: ./postgres/
    container_name: "dev_postgres"
    ports:
      - "5432:5432"
    environment:
        - POSTGRES_PASSWORD=123456
    volumes:
        - ./postgres:/var/lib/postgresql/data
    networks:
      - mynetwork
      
networks:
    mynetwork:
      driver: bridge